import{z as o,l as a}from"./index-0d440acb.js";const n=o({id:"users",state:()=>({data:[],loading:!1,addUserLoading:!1,getUserLoading:!1,updateUserLoading:!1,deleteUserLoading:!1,error:null,addUserError:null,getUserError:null,updateUserError:null,deleteUserError:null}),getters:{usersCount(e){return e.users.length}},actions:{async loadUsers(e){const s=a(),r=new URLSearchParams(e).toString();try{this.loading=!0;const t=await s.get(`users?include=roles&${r}`);this.data=t.data,this.error=null}catch(t){this.error=t}finally{this.loading=!1}},async getUser(e){const s=a();try{this.getUserLoading=!0;const r=await s.get(`users/${e}`);return this.getUserError=null,r}catch(r){throw this.getUserError={errors:[r.message]},r}finally{this.getUserLoading=!1}},async addUser(e){const s=a();try{this.addUserLoading=!0,await s.post("users",e),this.router.push({name:"users"}),this.addUserError=null}catch(r){this.addUserError=r.response.data}finally{this.addUserLoading=!1}},async updateUser(e,s){const r=a();try{this.updateUserLoading=!0,await r.put(`users/${e}`,s),this.router.push({name:"users"}),this.updateUserError=null}catch(t){this.updateUserError=t.response.data}finally{this.updateUserLoading=!1}},async deleteUser(e){const s=a();try{this.deleteUserLoading=!0,await s.delete(`users/${e}`),this.deleteUserError=null}catch(r){this.deleteUserError=r.response.data}finally{this.deleteUserLoading=!1}}}});export{n as u};
